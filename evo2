


local NPCS = {}

for i, v in pairs(game:GetService("Workspace").World.Live.Mobs:GetDescendants()) do
    if v:FindFirstChild("HumanoidRootPart") and v.Parent:IsA("Folder") then
            if not table.find(NPCS, tostring(v)) then
            table.insert(NPCS, tostring(v))
        end
    end
end


local NPC = {}

for i, v in pairs(game:GetService("Workspace").World.Interactables:GetChildren()) do
    if v:FindFirstChild("HumanoidRootPart") then
            if not table.find(NPC, tostring(v)) then
            table.insert(NPC, tostring(v))
        end
    end
end
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

local player = game.Players.LocalPlayer
local char = player.Character
local lp = game.Players.LocalPlayer


local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()

local X =
    Material.Load(
    {
        Title = "PM",
        Style = 2,
        SizeX = 300,
        SizeY = 350,
        Theme = "Light",
        ColorOverrides = {
            MainFrame = Color3.fromRGB(0, 0, 0),
            Toggle = Color3.fromRGB(124, 37, 255),
            ToggleAccent = Color3.fromRGB(255, 255, 255),
            Dropdown = Color3.fromRGB(124, 37, 255),
            DropdownAccent = Color3.fromRGB(255, 255, 255),
            Slider = Color3.fromRGB(124, 37, 255),
            SliderAccent = Color3.fromRGB(255, 255, 255),
            NavBarAccent = Color3.fromRGB(0, 0, 0),
            Content = Color3.fromRGB(0, 0, 0)
        }
    }
)

local Y =
    X.New(
    {
        Title = "AutoFarm"
    }
)
local M =
    X.New(
    {
        Title = "Misc"
    }
)
local S =
    X.New(
    {
        Title = "Auto Skills"
    }
)
local Cred =
    X.New(
    {
        Title = "Credits"
    }
)
Cred.Button(
    {
        Text = "Copy Discord",
        Callback = function()
            setclipboard("https://discord.gg/s3hYDPjuE3")
            toclipboard("https://discord.gg/s3hYDPjuE3")
        end
    }
)


Y.Toggle({
    Text = "Auto Loot",
    Callback = function(Value)
        b = Value
        while b do task.wait()
            pcall(
                function()
            for i, v in next,game:GetService("Workspace").World.Drops:GetDescendants() do
                if v:IsA("MeshPart") or v:IsA("Model") or v:IsA("Part") then
            local args = {
                [1] = "Pickup_Item",
                [2] = v.Parent
            }
            
            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            task.wait(0.1)
        end
    end
end)
        end
    end,
    Enabled = false
})

M.Dropdown({
    Text = "Select Slot",
    Callback = function(Value)
    getgenv().slot = Value    
end,
    Options = { 
        "Slot_1",
        "Slot_2",
        "Slot_3",

    }   
})

M.Button(
    {
        Text = "Unlock Progression Viewer Gamepass",
        Callback = function()
            local RaceProgression = Instance.new("StringValue", game.Players.LocalPlayer.Gamepasses)
            RaceProgression.Name = "48232208";
            RaceProgression.Value = "48232208";
        local RaceProgression2 = Instance.new("StringValue", game.Players.LocalPlayer.Gamepasses)
            RaceProgression2.Name = "48232208";
            RaceProgression2.Value = "48232208";
        end
    }
)

Y.Toggle({
    Text = "Auto Meditation",
    Callback = function(Value)
        a0 = Value
        while a0 do task.wait()
            local args = {
                [1] = "Meditating",
                [2] = true
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            local args = {
                [1] = "Apply_Meditation",
                [2] = 1,
                [3] = true
            }
            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            wait(0.1)
        end
    end,
    Enabled = false
})


local ii = Y.Dropdown({
    Text = "Select Mob",
    Callback = function(Value)
        getgenv().mobname = Value
end,
    Options = NPCS
})

local function getNPC()
    local dist, thing = math.huge
    for i, v in pairs(game:GetService("Workspace").World.Live.Mobs:GetDescendants()) do
        if v.Name == mobname and v:IsA("Model") and v:FindFirstChild("HumanoidRootPart")  then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
Y.Button(
    {
        Text = "Refresh Mobs",
        Callback = function()
            table.clear(NPCS)
            for i, v in pairs(game:GetService("Workspace").World.Live.Mobs:GetDescendants()) do
                if v:FindFirstChild("HumanoidRootPart") and v.Parent:IsA("Folder") then
                        if not table.find(NPCS, tostring(v)) then
                        table.insert(NPCS, tostring(v))
                        ii:SetOptions(NPCS)
                    end
                end
            end
        end
    }
)
Y.Dropdown({
    Text = "Select Weapon",
    Callback = function(Value)
        getgenv().weapon = Value
end,
    Options = {
        "Sword",
        "Fist"
    }
})
Y.Toggle({
    Text = "Auto Attack",
    Callback = function(Value)
        a1 = Value
        while a1 do task.wait()
            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer("Swing",1,weapon)
            task.wait(0.1)
            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer("Swing",2,weapon)
            task.wait(0.1)
            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer("Swing",3,weapon)
            task.wait(0.1)
            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer("Swing",4,weapon)
            task.wait(0.1)
        end
    end,
    Enabled = false
})


Y.Dropdown({
    Text = "Select Direction",
    Callback = function(Value)
        getgenv().d = Value
end,
    Options = {
        "Above",
        "Below",
        "Behind"
    }
})
Y.Toggle({
    Text = "Auto Mob",
    Callback = function(Value)
        a2 = Value
        while a2 do task.wait()
            pcall(function()
            if d == "Above" then
                repeat task.wait()
            lp.Character.HumanoidRootPart.CFrame =
            CFrame.new(getNPC().HumanoidRootPart.Position + Vector3.new(0, 8, 0), getNPC().HumanoidRootPart.Position)
                until getNPC().Humanoid.Health == 0 or a2 == false
            elseif d == "Below" then
                repeat task.wait()
                lp.Character.HumanoidRootPart.CFrame =
                CFrame.new(getNPC().HumanoidRootPart.Position + Vector3.new(0, -8, 0), getNPC().HumanoidRootPart.Position)
            until getNPC().Humanoid.Health == 0 or a2 == false
            elseif d == "Behind" then
                repeat task.wait()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNPC().HumanoidRootPart.CFrame * CFrame.new(0,0,8)
            until getNPC().Humanoid.Health == 0 or a2 == false
                end
            end)
        end
    end,
    Enabled = false
})

Y.Button(
    {
        Text = "Refresh Mobs",
        Callback = function()
            table.clear(NPCS)
            for i, v in pairs(game:GetService("Workspace").World.Live.Mobs:GetDescendants()) do
                if v:FindFirstChild("HumanoidRootPart") and v.Parent:IsA("Folder") then
                        if not table.find(NPCS, tostring(v)) then
                        table.insert(NPCS, tostring(v))
                        ii:SetOptions(NPCS)
                    end
                end
            end
        end
    }
)


local function getFOOD()
    local dist, thing = math.huge
    for i, v in pairs(game:GetService("Workspace").World.Visuals:GetChildren()) do
        if v:FindFirstChild("Eat_Part")  then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end

Y.Toggle({
    Text = "Auto Eat (Nearby)",
    Callback = function(Value)
        a3 = Value
        while a3 do task.wait()
                game:GetService("VirtualInputManager"):SendKeyEvent(true,Enum.KeyCode.E,false,game)
                task.wait(0.5)
        end
    end,
    Enabled = false
})


M.Dropdown({
    Text = "Select NPC",
    Callback = function(Value)
        getgenv().npcname = Value
end,
    Options = NPC
})

M.Button({
    Text = "Teleport to NPC",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").World.Interactables[npcname].HumanoidRootPart.CFrame
    end,
})

M.Toggle({
    Text = "Auto Arrancar Minigame",
    Callback = function(Value)
        c = Value
        while c do task.wait()
            local args = {
                [1] = "Change_Arrancar",
                [2] = "Add"
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
        end
    end,
    Enabled = false
})


M.Dropdown({
    Text = "Select Place",
    Callback = function(Value)
        getgenv().place = Value
end,
    Options = {"Main Menu",
    "Hueco Mundo",
    "Karakura Town",
    "Soul Society",}
})

M.Button({
    Text = "Teleport to Place",
    Callback = function()
        if place == "Main Menu" then
        game:GetService("TeleportService"):Teleport(9447079542, game.Players.LocalPlayer)
        elseif place == "Karakura Town" then
            game:GetService("TeleportService"):Teleport(9474703390, game.Players.LocalPlayer)
        elseif place == "Hueco Mundo" then
            game:GetService("TeleportService"):Teleport(10202329527, game.Players.LocalPlayer)
        elseif place == "Soul Society" then
            game:GetService("TeleportService"):Teleport(11420877323, game.Players.LocalPlayer)
        end
        
    end,
})

S.TextField({
	Text = "Enter Skill Name",
	Callback = function(Value)
		getgenv().skillname = Value
	end,
})

S.Toggle({
    Text = "Auto Skill",
    Callback = function(Value)
        b5 = Value
        while b5 do task.wait()
            local args = {
                [1] = skillname
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            task.wait(1)
        end
    end,
    Enabled = false
})

S.TextField({
	Text = "Enter Skill Name",
	Callback = function(Value)
		getgenv().skillname1 = Value
	end,
})

S.Toggle({
    Text = "Auto Skill",
    Callback = function(Value)
        b1 = Value
        while b1 do task.wait()
            local args = {
                [1] = skillname1
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            task.wait(1)
        end
    end,
    Enabled = false
})

S.TextField({
	Text = "Enter Skill Name",
	Callback = function(Value)
		getgenv().skillname2 = Value
	end,
})

S.Toggle({
    Text = "Auto Skill",
    Callback = function(Value)
        b2 = Value
        while b2 do task.wait()
            local args = {
                [1] = skillname2
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            task.wait(1)
        end
    end,
    Enabled = false
})

S.TextField({
	Text = "Enter Skill Name",
	Callback = function(Value)
		getgenv().skillname3 = Value
	end,
})

S.Toggle({
    Text = "Auto Skill",
    Callback = function(Value)
        b3 = Value
        while b3 do task.wait()
            local args = {
                [1] = skillname3
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            task.wait(1)
        end
    end,
    Enabled = false
})

S.TextField({
	Text = "Enter Skill Name",
	Callback = function(Value)
		getgenv().skillname4 = Value
	end,
})

S.Toggle({
    Text = "Auto Skill",
    Callback = function(Value)
        b4 = Value
        while b4 do task.wait()
            local args = {
                [1] = skillname4
            }

            game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
            task.wait(1)
        end
    end,
    Enabled = false
})




for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    v:Disable()
    end

    
